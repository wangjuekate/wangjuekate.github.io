{"ast":null,"code":"'use strict';\n\nconst typeOf = require('kind-of');\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\nmodule.exports = function (file, data, options) {\n  if (data == null && options == null) {\n    switch (typeOf(file)) {\n      case 'object':\n        data = file.data;\n        options = {};\n        break;\n      case 'string':\n        return file;\n      default:\n        {\n          throw new TypeError('expected file to be a string or object');\n        }\n    }\n  }\n  const str = file.content;\n  const opts = defaults(options);\n  if (data == null) {\n    if (!opts.data) return file;\n    data = opts.data;\n  }\n  const language = file.language || opts.language;\n  const engine = getEngine(language, opts);\n  if (typeof engine.stringify !== 'function') {\n    throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n  }\n  data = Object.assign({}, file.data, data);\n  const open = opts.delimiters[0];\n  const close = opts.delimiters[1];\n  const matter = engine.stringify(data, options).trim();\n  let buf = '';\n  if (matter !== '{}') {\n    buf = newline(open) + newline(matter) + newline(close);\n  }\n  if (typeof file.excerpt === 'string' && file.excerpt !== '') {\n    if (str.indexOf(file.excerpt.trim()) === -1) {\n      buf += newline(file.excerpt) + newline(close);\n    }\n  }\n  return buf + newline(str);\n};\nfunction newline(str) {\n  return str.slice(-1) !== '\\n' ? str + '\\n' : str;\n}","map":{"version":3,"names":["typeOf","require","getEngine","defaults","module","exports","file","data","options","TypeError","str","content","opts","language","engine","stringify","Object","assign","open","delimiters","close","matter","trim","buf","newline","excerpt","indexOf","slice"],"sources":["/Users/katewang/Library/CloudStorage/Dropbox/Business_Ideas/GithubWiki_LearningSharing/wangjuekate.github.io/node_modules/gray-matter/lib/stringify.js"],"sourcesContent":["'use strict';\n\nconst typeOf = require('kind-of');\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, data, options) {\n  if (data == null && options == null) {\n    switch (typeOf(file)) {\n      case 'object':\n        data = file.data;\n        options = {};\n        break;\n      case 'string':\n        return file;\n      default: {\n        throw new TypeError('expected file to be a string or object');\n      }\n    }\n  }\n\n  const str = file.content;\n  const opts = defaults(options);\n  if (data == null) {\n    if (!opts.data) return file;\n    data = opts.data;\n  }\n\n  const language = file.language || opts.language;\n  const engine = getEngine(language, opts);\n  if (typeof engine.stringify !== 'function') {\n    throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n  }\n\n  data = Object.assign({}, file.data, data);\n  const open = opts.delimiters[0];\n  const close = opts.delimiters[1];\n  const matter = engine.stringify(data, options).trim();\n  let buf = '';\n\n  if (matter !== '{}') {\n    buf = newline(open) + newline(matter) + newline(close);\n  }\n\n  if (typeof file.excerpt === 'string' && file.excerpt !== '') {\n    if (str.indexOf(file.excerpt.trim()) === -1) {\n      buf += newline(file.excerpt) + newline(close);\n    }\n  }\n\n  return buf + newline(str);\n};\n\nfunction newline(str) {\n  return str.slice(-1) !== '\\n' ? str + '\\n' : str;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,SAAS,GAAGD,OAAO,CAAC,UAAU,CAAC;AACrC,MAAME,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEtCG,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;EAC7C,IAAID,IAAI,IAAI,IAAI,IAAIC,OAAO,IAAI,IAAI,EAAE;IACnC,QAAQR,MAAM,CAACM,IAAI,CAAC;MAClB,KAAK,QAAQ;QACXC,IAAI,GAAGD,IAAI,CAACC,IAAI;QAChBC,OAAO,GAAG,CAAC,CAAC;QACZ;MACF,KAAK,QAAQ;QACX,OAAOF,IAAI;MACb;QAAS;UACP,MAAM,IAAIG,SAAS,CAAC,wCAAwC,CAAC;QAC/D;IACF;EACF;EAEA,MAAMC,GAAG,GAAGJ,IAAI,CAACK,OAAO;EACxB,MAAMC,IAAI,GAAGT,QAAQ,CAACK,OAAO,CAAC;EAC9B,IAAID,IAAI,IAAI,IAAI,EAAE;IAChB,IAAI,CAACK,IAAI,CAACL,IAAI,EAAE,OAAOD,IAAI;IAC3BC,IAAI,GAAGK,IAAI,CAACL,IAAI;EAClB;EAEA,MAAMM,QAAQ,GAAGP,IAAI,CAACO,QAAQ,IAAID,IAAI,CAACC,QAAQ;EAC/C,MAAMC,MAAM,GAAGZ,SAAS,CAACW,QAAQ,EAAED,IAAI,CAAC;EACxC,IAAI,OAAOE,MAAM,CAACC,SAAS,KAAK,UAAU,EAAE;IAC1C,MAAM,IAAIN,SAAS,CAAC,YAAY,GAAGI,QAAQ,GAAG,8BAA8B,CAAC;EAC/E;EAEAN,IAAI,GAAGS,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,IAAI,CAACC,IAAI,EAAEA,IAAI,CAAC;EACzC,MAAMW,IAAI,GAAGN,IAAI,CAACO,UAAU,CAAC,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGR,IAAI,CAACO,UAAU,CAAC,CAAC,CAAC;EAChC,MAAME,MAAM,GAAGP,MAAM,CAACC,SAAS,CAACR,IAAI,EAAEC,OAAO,CAAC,CAACc,IAAI,CAAC,CAAC;EACrD,IAAIC,GAAG,GAAG,EAAE;EAEZ,IAAIF,MAAM,KAAK,IAAI,EAAE;IACnBE,GAAG,GAAGC,OAAO,CAACN,IAAI,CAAC,GAAGM,OAAO,CAACH,MAAM,CAAC,GAAGG,OAAO,CAACJ,KAAK,CAAC;EACxD;EAEA,IAAI,OAAOd,IAAI,CAACmB,OAAO,KAAK,QAAQ,IAAInB,IAAI,CAACmB,OAAO,KAAK,EAAE,EAAE;IAC3D,IAAIf,GAAG,CAACgB,OAAO,CAACpB,IAAI,CAACmB,OAAO,CAACH,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3CC,GAAG,IAAIC,OAAO,CAAClB,IAAI,CAACmB,OAAO,CAAC,GAAGD,OAAO,CAACJ,KAAK,CAAC;IAC/C;EACF;EAEA,OAAOG,GAAG,GAAGC,OAAO,CAACd,GAAG,CAAC;AAC3B,CAAC;AAED,SAASc,OAAOA,CAACd,GAAG,EAAE;EACpB,OAAOA,GAAG,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAGjB,GAAG,GAAG,IAAI,GAAGA,GAAG;AAClD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}