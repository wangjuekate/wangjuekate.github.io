{"ast":null,"code":"'use strict';\n\nconst yaml = require('js-yaml');\n\n/**\n * Default engines\n */\n\nconst engines = exports = module.exports;\n\n/**\n * YAML\n */\n\nengines.yaml = {\n  parse: yaml.safeLoad.bind(yaml),\n  stringify: yaml.safeDump.bind(yaml)\n};\n\n/**\n * JSON\n */\n\nengines.json = {\n  parse: JSON.parse.bind(JSON),\n  stringify: function (obj, options) {\n    const opts = Object.assign({\n      replacer: null,\n      space: 2\n    }, options);\n    return JSON.stringify(obj, opts.replacer, opts.space);\n  }\n};\n\n/**\n * JavaScript\n */\n\nengines.javascript = {\n  parse: function parse(str, options, wrap) {\n    /* eslint no-eval: 0 */\n    try {\n      if (wrap !== false) {\n        str = '(function() {\\nreturn ' + str.trim() + ';\\n}());';\n      }\n      return eval(str) || {};\n    } catch (err) {\n      if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n        return parse(str, options, false);\n      }\n      throw new SyntaxError(err);\n    }\n  },\n  stringify: function () {\n    throw new Error('stringifying JavaScript is not supported');\n  }\n};","map":{"version":3,"names":["yaml","require","engines","exports","module","parse","safeLoad","bind","stringify","safeDump","json","JSON","obj","options","opts","Object","assign","replacer","space","javascript","str","wrap","trim","eval","err","test","message","SyntaxError","Error"],"sources":["/Users/katewang/Library/CloudStorage/Dropbox/Business_Ideas/GithubWiki_LearningSharing/wangjuekate.github.io/node_modules/gray-matter/lib/engines.js"],"sourcesContent":["'use strict';\n\nconst yaml = require('js-yaml');\n\n/**\n * Default engines\n */\n\nconst engines = exports = module.exports;\n\n/**\n * YAML\n */\n\nengines.yaml = {\n  parse: yaml.safeLoad.bind(yaml),\n  stringify: yaml.safeDump.bind(yaml)\n};\n\n/**\n * JSON\n */\n\nengines.json = {\n  parse: JSON.parse.bind(JSON),\n  stringify: function(obj, options) {\n    const opts = Object.assign({replacer: null, space: 2}, options);\n    return JSON.stringify(obj, opts.replacer, opts.space);\n  }\n};\n\n/**\n * JavaScript\n */\n\nengines.javascript = {\n  parse: function parse(str, options, wrap) {\n    /* eslint no-eval: 0 */\n    try {\n      if (wrap !== false) {\n        str = '(function() {\\nreturn ' + str.trim() + ';\\n}());';\n      }\n      return eval(str) || {};\n    } catch (err) {\n      if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n        return parse(str, options, false);\n      }\n      throw new SyntaxError(err);\n    }\n  },\n  stringify: function() {\n    throw new Error('stringifying JavaScript is not supported');\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE/B;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGC,OAAO,GAAGC,MAAM,CAACD,OAAO;;AAExC;AACA;AACA;;AAEAD,OAAO,CAACF,IAAI,GAAG;EACbK,KAAK,EAAEL,IAAI,CAACM,QAAQ,CAACC,IAAI,CAACP,IAAI,CAAC;EAC/BQ,SAAS,EAAER,IAAI,CAACS,QAAQ,CAACF,IAAI,CAACP,IAAI;AACpC,CAAC;;AAED;AACA;AACA;;AAEAE,OAAO,CAACQ,IAAI,GAAG;EACbL,KAAK,EAAEM,IAAI,CAACN,KAAK,CAACE,IAAI,CAACI,IAAI,CAAC;EAC5BH,SAAS,EAAE,SAAAA,CAASI,GAAG,EAAEC,OAAO,EAAE;IAChC,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC;MAACC,QAAQ,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAC,CAAC,EAAEL,OAAO,CAAC;IAC/D,OAAOF,IAAI,CAACH,SAAS,CAACI,GAAG,EAAEE,IAAI,CAACG,QAAQ,EAAEH,IAAI,CAACI,KAAK,CAAC;EACvD;AACF,CAAC;;AAED;AACA;AACA;;AAEAhB,OAAO,CAACiB,UAAU,GAAG;EACnBd,KAAK,EAAE,SAASA,KAAKA,CAACe,GAAG,EAAEP,OAAO,EAAEQ,IAAI,EAAE;IACxC;IACA,IAAI;MACF,IAAIA,IAAI,KAAK,KAAK,EAAE;QAClBD,GAAG,GAAG,wBAAwB,GAAGA,GAAG,CAACE,IAAI,CAAC,CAAC,GAAG,UAAU;MAC1D;MACA,OAAOC,IAAI,CAACH,GAAG,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,IAAIH,IAAI,KAAK,KAAK,IAAI,0BAA0B,CAACI,IAAI,CAACD,GAAG,CAACE,OAAO,CAAC,EAAE;QAClE,OAAOrB,KAAK,CAACe,GAAG,EAAEP,OAAO,EAAE,KAAK,CAAC;MACnC;MACA,MAAM,IAAIc,WAAW,CAACH,GAAG,CAAC;IAC5B;EACF,CAAC;EACDhB,SAAS,EAAE,SAAAA,CAAA,EAAW;IACpB,MAAM,IAAIoB,KAAK,CAAC,0CAA0C,CAAC;EAC7D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}